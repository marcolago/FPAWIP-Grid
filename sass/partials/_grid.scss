@import "_functions.scss";
@import "_mq.scss";

/* ZERO-SPACE FONT HACK Â©marcolago 2014 */

/* overridable variables */

$f_body_stack:            sans-serif !default;
$use_font-size-0:         false !default;

$font-size_px:            16 !default;
$line-height:             1.68 !default;
$gutter_width_px_value:   22 !default;

$large_label:             "large" !default;
$medium_label:            "medium" !default;
$nomensland_label:        "nml" !default;
$small_label:             "small" !default;
$micro_label:             "micro" !default;

/* configuration flags */

$use_zerospacefont:       true !default;        // set to true to remove the white space for the inline-block elements without setting the font-size to 0
$has_row_gap:             true !default;        // set to true to have horizontal space over and down the elements
$use_symmetric_gutters:   false !default;       // it works fine but can cause horizontal scrolling if the .grid wrapper is 100% viewport wide

$equal_heights:           true !default;        // set to true to have every grid__item of the same height in a row (could have undesired side effects on collapsed rows, set the grid__item element to display: inline-block to override, or use the .auto-heights utility class)

$define_sizes:            true !default;        // set to true at leas one of the columns variables
$define_12_columns:       true !default;        // create the classes for using 12 columns and also 6, 4 and 3 columns
$define_10_columns:       true !default;        // create the classes for using 10 columns and 5 columns
$define_golden_columns:   true !default;        // create the classes for using golden ratio columns (3+5, 3+8 and 5+8)

$define_sizes_min:        true !default;        // create the classes to manage the --min version
$define_micro_size:       true !default;        // create the classes for the micro size

$define_push:             true !default;        // create the push general classes
$expand_push:             true !default;        // create the push classes per single responsive size
$push_direction:          "left" !default;      // set to "left" for left-to-right languages, set to "right" for right-to-left languages

$define_pull:             true !default;        // create the pull general classes
$expand_pull:             true !default;        // create the pull classes per single responsive size
$pull_direction:          "right" !default;     // set to "right" for left-to-right languages, set to "left" for right-to-left languages

/* auto generated variables */

$font-size:               get-rem($font-size_px) !default;

$gutter_width_px:         $gutter_width_px_value * 1px !default; // for retro-compatibility issue
$gutter_width:            get-rem($gutter_width_px) !default;

$gap_between_rows_px:     $line-height * $font-size_px * 1px;
$gap_between_rows:        $line-height * 1rem;

/* set $use_zerospacefont to true to use Zero-Space Font for removing white space between inline-block elements */
// TODO: manage the inclusion of the font at runtime with @support rule
@if ($use_zerospacefont == true) {

  @font-face {
    font-family: 'zerospaceregular';
    src: url('webfonts/zerospace-regular-webfont.eot');
  }

  @font-face {
      font-family: 'zerospaceregular';
      src: url(data:application/font-woff2;charset=utf-8;base64,d09GMgABAAAAAATEABEAAAAACbQAAARkAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP0ZGVE0cGh4GYACCSggGCYRlEQgKaHwBNgIkAxQLDAAEIAWFNgdCDC4/d2ViZgYbjAgRJItSI/siwea0wa2HlNGoG+7UQ1alSDEqdtfnh+nr8RC/1t7M7j9BzNNR8XQN8dRJmRKsNPGQKRkffs29r7fhIV4oM6+I2sQkFCRpxhuNUtYQS2RJRPNL2+vKACTDyms7pAvimVkKcwVcxqOi+k357jtUhVvEokyZjtLsgzf/xwuX1tQW0PimYGyt+kv5UgIck7LT6IBIqBk/7bYM7+swq0svQgC/J2dTRHzXL26widv/d9Te1AcmQCIQqFEvCarM6fuUjVpYspog9+GfyCaO53ECBda7bo/nxwiW1v9I/0A5oaVLmBbfOZGlnKtynXP1BV0sTszhvamxFJ5Ygv+wCWHJ3/L6jkNIZEJBF73Icsb0/xn4WbfklYMsqHIYIxMOQ5c8SHbVIWeF2+HLn7vp+QNU5cq6CMryNxStiJBhh6dcr3jDHJJpT9Ux4glnvLqPkGWHHWHEXHM/9Uuv+9zo/upfXotB9gqHvku+UrAYrqOzbfHe3RFybNKqFij38sLevRo0RSHXJm1FZXx8nq0o5y2rIuRbvknA8QI9i5HZPiiMrI4h0IQLx8IhjgY3a2O8DjnZFBJzFiwsV6bLDLZCoeV3a7EXwStWIXfFXsfcL32HTrPjo4eHYx9eTJXxJ3Lg/tB3SAIHIcVlYh9ikW0NC3HExzKsP5VQmbzjU50xmj+FPWADWoMMml0WmS6tUiv8ifCRwm54Whso78JqugclCIdBjx/qbBYxiEcoOwNxBS+fPUZbVQAPgV34TQc3gXys0vLC+Z09O3LoqIRc8ITbrp/U3lhlFylWcVeXGn5YRkfIx47+WQdHTDk5zCDp0rxI2T1cEU+5NDF1H+lKK1YwFnwE9cca6cSqLWpiAvJGo8ME8e+FSUuwBxK0wVCnBp13+ITgnLSWS68eLs5vI90kZtgd+t6depnqwGXPBNsHaYWTT3MixVuiZjRON6xKIqppRdIflYj6NgICjv+Wlh0o3f4btcB/tjCcldvZswStJQwHlJP/X2aGLQt+EIvVV+gHeigbrtcwToCCYTARSExUWRZ+pwE8IBPBteAI0lhgRDQDJAZwARV2rEKNFQdQcOcWGlgJowCpsZgE6MNW+OCFamIXXml1nMIblZA7zTsVkfdfe2Zm4gvd4hKKUoL8AjJUV2BmRiZWqk1FqhEbUrbEGfGwwx8b6i3ySvVOSdiwhaZP8vLLivRtmOgZ7ckeM4bMGWWXGbGVTlym1ZgqnT04LSguRqXiGEekpotqGgFxmcVnYnK9E3oOcTBqQ5i33eHTeyOCNpmBbO7OOlmYuZa97CF5omVP5NgwR9HD7s1IcDPYsTlejXzLU2ZcI9tDrFSsIadvaOdmZSZLyXxd0222eflsLAYxY+xIuZm0XqyTpyRlBaXstFfkW277/9px1isKBCUMFeHSf/bqxZNrgu+tzc2eP7V2Q1/3Q/Uf1A4NP+WNu0SRXZ/0/ci96PLDqJqKag3fBPmTHeNRtYLIzO6xRwA=) format('woff2'),
           url(data:application/font-woff;charset=utf-8;base64,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) format('woff'),
           url('webfonts/zerospace-regular-webfont.ttf') format('truetype'),
           url('webfonts/zerospace-regular-webfont.svg#zerospaceregular') format('svg');
      font-weight: normal;
      font-style: normal;
  }

}

.zsf-parent {
  @if ($use_zerospacefont == true) {
    font-family: "zerospaceregular", sans-serif;
  }
  /* set the font-size to 0 for a 100% compatibility */
  @if ($use_font-size-0 == true) {
    font-size: 0;
  }
}

.zsf-child {
  /* reset font-face and font-size as you need */
  font-family: $f_body_stack;
  @if ($use_font-size-0 == true) {
    font-size: $font-size_px * 1px;
    font-size: $font-size;
  }
  display: inline-block;
}

/* GRID */

.grid,
.grid__item,
.grid__box {
  list-style-type: none;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  z-index: 0;
}

.grid-wrapper {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.grid {
  // remember to not set left and right padding on .grid parent
  // if you want to be sure use .grid-wrapper class on .grid parent
  // but pay attention to the !important override
  @extend .zsf-parent;

  @if ($has_row_gap == true) {
    padding-bottom: $gap_between_rows_px; // Used padding to allow background symmetry
    padding-bottom: $gap_between_rows; // Used padding to allow background symmetry
  }

  @if ($use_symmetric_gutters == true) {
    margin-left:  -$gutter_width_px_value * 0.5px;
    margin-left:  calc(-$gutter_width * 0.5);
    margin-right: -$gutter_width_px_value * 0.5px;
    margin-right: calc(-$gutter_width * 0.5);
  }

  @if ($use_symmetric_gutters == false) {
    margin-left:  -$gutter_width_px_value * 1px;
    margin-left:  -$gutter_width;
  }
  
  display: flex;
  flex-wrap: wrap;

  &.centered {
    text-align: center;
    justify-content: center;
  }

  &.gutterless {
    margin-left: 0;
    margin-right: 0;
  }

  &.symmetric-gutters {
    margin-left:  -$gutter_width_px_value * 0.5px;
    margin-left:  calc(-$gutter_width * 0.5);
    margin-right: -$gutter_width_px_value * 0.5px;
    margin-right: calc(-$gutter_width * 0.5);
  }

  &.rowgapless {
    padding-bottom: 0;
  }

  &.rowgap {
    padding-bottom: $gap_between_rows;
  }

  & > .grid {
    margin-left: 0;
    margin-right: 0;
  }

  & .grid {
    @if ($has_row_gap == true) {
      margin-top: -$gap_between_rows;
    }
  }
}

.grid .rowgapless {
  margin-top: 0;
}

.rowgapless .rowgapless {
  margin-top: 0;
}

.grid.vertical-middle {
  align-items: center;
}

.grid.vertical-top {
  align-items: flex-start;
}

.grid.vertical-bottom {
  align-items: flex-end;
}

.grid.reversed {
  direction: rtl; // change the direction according to the target language

  & .grid__item {
    direction: ltr; // change the direction according to the target language
  }
}

.grid__item {
  @extend .zsf-child;
  text-align: left;
  width: 100%;

  @if ($has_row_gap == true) {
    margin-top: $gap_between_rows;  
  }

  @if ($use_symmetric_gutters == true) {
    padding-left:  $gutter_width_px_value * 0.5px;
    padding-left:  calc(#{$gutter_width} * 0.5);
    padding-right: $gutter_width_px_value * 0.5px;
    padding-right: calc(#{$gutter_width} * 0.5);
  }

  @if ($use_symmetric_gutters == false) {
    padding-left:  $gutter_width_px_value * 1px;
    padding-left:  $gutter_width;
  }

  vertical-align: top;
  position: relative;

  @if ($equal_heights == true) {
    display: flex;
  }

  flex-wrap: wrap;
  flex-grow: 0;
  flex-shrink: 1;

  .vertical-middle > & {
    vertical-align: middle;
  }

  .vertical-top > & {
    vertical-align: top;
  }

  .vertical-bottom > & {
    vertical-align: bottom;
  }

  .gutterless > & {
    padding-left: 0;
    padding-right: 0;
  }

  .symmetric-gutters > & {
    padding-left:  $gutter_width_px_value * 0.5px;
    padding-left:  calc(#{$gutter_width} * 0.5);
    padding-right: $gutter_width_px_value * 0.5px;
    padding-right: calc(#{$gutter_width} * 0.5);
  }

  &.autosize {
    width: auto;
  }

  .rowgapless > & {
    margin-top: 0;
  }

  .rowgap > & {
    margin-top: $gap_between_rows; // force the row gap even if the grid is rowgapless
  }

  .equal-heights > & {
    display: flex;
  }

  .auto-heights > & {
    display: inline-block;
  }

  &.auto-height {
    display: inline-block;
  }
}

.grid__box {
  width: 100%;
  margin: 0;
  padding: 0;
  position: relative;
}

/*
##     ##    ###    ##     ##
###   ###   ## ##    ##   ##
#### ####  ##   ##    ## ##
## ### ## ##     ##    ###
##     ## #########   ## ##
##     ## ##     ##  ##   ##
##     ## ##     ## ##     ##
*/

@mixin sizes($size_class) {

  // twelves
  
  @if ($define_12_columns == true) {

    .#{$size_class}--1-12 {
      width: get-percent(1,12);
    }

    .#{$size_class}--2-12,
    .#{$size_class}--1-6 {
      width: get-percent(2,12);
    }

    .#{$size_class}--3-12,
    .#{$size_class}--1-4 {
      width: get-percent(3,12);
    }

    .#{$size_class}--4-12,
    .#{$size_class}--2-6,
    .#{$size_class}--1-3 {
      width: get-percent(4,12);
    }

    .#{$size_class}--5-12 {
      width: get-percent(5,12);
    }

    .#{$size_class}--6-12,
    .#{$size_class}--3-6,
    .#{$size_class}--2-4,
    .#{$size_class}--1-2 {
      width: get-percent(6,12);
    }

    .#{$size_class}--7-12 {
      width: get-percent(7,12);
    }

    .#{$size_class}--8-12,
    .#{$size_class}--4-6,
    .#{$size_class}--2-3 {
      width: get-percent(8,12);
    }

    .#{$size_class}--9-12,
    .#{$size_class}--3-4 {
      width: get-percent(9,12);
    }

    .#{$size_class}--10-12,
    .#{$size_class}--5-6 {
      width: get-percent(10,12);
    }

    .#{$size_class}--11-12 {
      width: get-percent(11,12);
    }

    .#{$size_class}--full {
      width: 100%;
    }

  }

  // tenth

  @if ($define_10_columns == true) {

    .#{$size_class}--1-10 {
      width: get-percent(1,10);
    }

    .#{$size_class}--2-10,
    .#{$size_class}--1-5 {
      width: get-percent(2,10);
    }

    .#{$size_class}--3-10 {
      width: get-percent(3,10);
    }

    .#{$size_class}--4-10, 
    .#{$size_class}--2-5 {
      width: get-percent(4,10);
    }

    .#{$size_class}--5-10 {
      width: get-percent(5,10);
    }

    .#{$size_class}--6-10,
    .#{$size_class}--3-5 {
      width: get-percent(6,10);
    }

    .#{$size_class}--7-10 {
      width: get-percent(7,10);
    }

    .#{$size_class}--8-10,
    .#{$size_class}--4-5 {
      width: get-percent(8,10);
    }

    .#{$size_class}--9-10 {
      width: get-percent(9,10);
    }

  }

  // golden ratio

  @if ($define_golden_columns == true) {

    // eights

    .#{$size_class}--3-8 {
      width: get-percent(3,8);
    }

    .#{$size_class}--5-8 {
      width: get-percent(5,8);
    }

    // elevenths

    .#{$size_class}--3-11 {
      width: get-percent(3,11);
    }

    .#{$size_class}--5-11 {
      width: get-percent(5,11);
    }

    .#{$size_class}--8-11 {
      width: get-percent(8,11);
    }

    // thirteenths

    .#{$size_class}--3-13 {
      width: get-percent(3,13);
    }

    .#{$size_class}--5-13 {
      width: get-percent(5,13);
    }

    .#{$size_class}--8-13 {
      width: get-percent(8,13);
    }

    .#{$size_class}--11-13 {
      width: get-percent(11,13);
    }

  }

}

/*
##     ## #### ##    ## 
###   ###  ##  ###   ## 
#### ####  ##  ####  ## 
## ### ##  ##  ## ## ## 
##     ##  ##  ##  #### 
##     ##  ##  ##   ### 
##     ## #### ##    ## 
*/

@mixin sizes-min($size_class) {

  // twelves

  .#{$size_class}--1-12--min {
    min-width: get-percent(1,12);
    flex-basis: get-percent(1,12);
    flex-grow: 1;
  }

  .#{$size_class}--2-12--min,
  .#{$size_class}--1-6--min {
    min-width: get-percent(2,12);
    flex-basis: get-percent(2,12);
    flex-grow: 1;
  }

  .#{$size_class}--3-12--min,
  .#{$size_class}--1-4--min {
    min-width: get-percent(3,12);
    flex-basis: get-percent(3,12);
    flex-grow: 1;
  }

  .#{$size_class}--4-12--min,
  .#{$size_class}--2-6--min,
  .#{$size_class}--1-3--min {
    min-width: get-percent(4,12);
    flex-basis: get-percent(4,12);
    flex-grow: 1;
  }

  .#{$size_class}--5-12--min {
    min-width: get-percent(5,12);
    flex-basis: get-percent(5,12);
    flex-grow: 1;
  }

  .#{$size_class}--6-12--min,
  .#{$size_class}--3-6--min,
  .#{$size_class}--2-4--min,
  .#{$size_class}--1-2--min {
    min-width: get-percent(6,12);
    flex-basis: get-percent(6,12);
    flex-grow: 1;
  }

  .#{$size_class}--7-12--min {
    min-width: get-percent(7,12);
    flex-basis: get-percent(7,12);
    flex-grow: 1;
  }

  .#{$size_class}--8-12--min,
  .#{$size_class}--4-6--min,
  .#{$size_class}--2-3--min {
    min-width: get-percent(8,12);
    flex-basis: get-percent(8,12);
    flex-grow: 1;
  }

  .#{$size_class}--9-12--min,
  .#{$size_class}--3-4--min {
    min-width: get-percent(9,12);
    flex-basis: get-percent(9,12);
    flex-grow: 1;
  }

  .#{$size_class}--10-12--min,
  .#{$size_class}--5-6--min {
    min-width: get-percent(10,12);
    flex-basis: get-percent(10,12);
    flex-grow: 1;
  }

  .#{$size_class}--11-12--min {
    min-width: get-percent(11,12);
    flex-basis: get-percent(11,12);
    flex-grow: 1;
  }

  // tenth

  .#{$size_class}--1-10 {
    min-width: get-percent(1,10);
    flex-basis: get-percent(1,10);
    flex-grow: 1;
  }

  .#{$size_class}--2-10,
  .#{$size_class}--1-5 {
    min-width: get-percent(2,10);
    flex-basis: get-percent(2,10);
    flex-grow: 1;
  }

  .#{$size_class}--3-10 {
    min-width: get-percent(3,10);
    flex-basis: get-percent(3,10);
    flex-grow: 1;
  }

  .#{$size_class}--4-10, 
  .#{$size_class}--2-5 {
    min-width: get-percent(4,10);
    flex-basis: get-percent(4,10);
    flex-grow: 1;
  }

  .#{$size_class}--5-10 {
    min-width: get-percent(5,10);
    flex-basis: get-percent(5,10);
    flex-grow: 1;
  }

  .#{$size_class}--6-10,
  .#{$size_class}--3-5 {
    min-width: get-percent(6,10);
    flex-basis: get-percent(6,10);
    flex-grow: 1;
  }

  .#{$size_class}--7-10 {
    min-width: get-percent(7,10);
    flex-basis: get-percent(7,10);
    flex-grow: 1;
  }

  .#{$size_class}--8-10,
  .#{$size_class}--4-5 {
    min-width: get-percent(8,10);
    flex-basis: get-percent(8,10);
    flex-grow: 1;
  }

  .#{$size_class}--9-10 {
    min-width: get-percent(9,10);
    flex-basis: get-percent(9,10);
    flex-grow: 1;
  }

  // golden ratio

  // eights

  .#{$size_class}--3-8--min {
    min-width: get-percent(3,8);
    flex-basis: get-percent(3,8);
    flex-grow: 1;
  }

  .#{$size_class}--5-8--min {
    min-width: get-percent(5,8);
    flex-basis: get-percent(5,8);
    flex-grow: 1;
  }

  // elevenths

  .#{$size_class}--3-11--min {
    min-width: get-percent(3,11);
    flex-basis: get-percent(3,11);
    flex-grow: 1;
  }

  .#{$size_class}--5-11--min {
    min-width: get-percent(5,11);
    flex-basis: get-percent(5,11);
    flex-grow: 1;
  }

  .#{$size_class}--8-11--min {
    min-width: get-percent(8,11);
    flex-basis: get-percent(8,11);
    flex-grow: 1;
  }

  // thirteenths

  .#{$size_class}--3-13--min {
    min-width: get-percent(3,13);
    flex-basis: get-percent(3,13);
    flex-grow: 1;
  }

  .#{$size_class}--5-13--min {
    min-width: get-percent(5,13);
    flex-basis: get-percent(5,13);
    flex-grow: 1;
  }

  .#{$size_class}--8-13--min {
    min-width: get-percent(8,13);
    flex-basis: get-percent(8,13);
    flex-grow: 1;
  }

  .#{$size_class}--11-13--min {
    min-width: get-percent(11,13);
    flex-basis: get-percent(11,13);
    flex-grow: 1;
  }

}

/*
 ######  #### ######## ########  ######
##    ##  ##       ##  ##       ##    ##
##        ##      ##   ##       ##
 ######   ##     ##    ######    ######
      ##  ##    ##     ##             ##
##    ##  ##   ##      ##       ##    ##
 ######  #### ######## ########  ######
*/

.no-opacity,
.lte-ie-8 {
  @if ($define_sizes == true) {
    @include sizes($large_label);
  }
  @if ($define_sizes_min == true) {
    @include sizes-min($large_label);
  }
}

@media screen and ($mq_large_min) {
  @if ($define_sizes == true) {
    @include sizes($large_label);
  }
  @if ($define_sizes_min == true) {
    @include sizes-min($large_label);
  }
}

@media screen and ($mq_medium_max) and ($mq_medium_min) {
  @if ($define_sizes == true) {
    @include sizes($medium_label);
  }
  @if ($define_sizes_min == true) {
    @include sizes-min($medium_label);
  }
}

@media screen and ($mq_nomensland_max) and ($mq_nomensland_min) {
  @if ($define_sizes == true) {
    @include sizes($nomensland_label);
  }
  @if ($define_sizes_min == true) {
    @include sizes-min($nomensland_label);
  }
}

@media screen and ($mq_small_max) {
  @if ($define_sizes == true) {
    @include sizes($small_label);
  }
  @if ($define_sizes_min == true) {
    @include sizes-min($small_label);
  }
}

@if ($define_sizes == true and $define_micro_size == true) {
  @media screen and ($mq_micro_max) {
    @include sizes($micro_label);
    @if ($define_sizes_min == true) {
      @include sizes-min($micro_label);
    }
  }
}

/*
########  ##     ##  ######  ##     ## 
##     ## ##     ## ##    ## ##     ## 
##     ## ##     ## ##       ##     ## 
########  ##     ##  ######  ######### 
##        ##     ##       ## ##     ## 
##        ##     ## ##    ## ##     ## 
##         #######   ######  ##     ## 
*/

@if ($define_push == true) {

  @if ($define_12_columns == true) {

    .push--1-12 {
      left: get-percent(1,12);
    }

    .push--2-12,
    .push--1-6 {
      left: get-percent(2,12);
    }

    .push--3-12,
    .push--1-4 {
      left: get-percent(3,12);
    }

    .push--4-12,
    .push--2-6,
    .push--1-3 {
      left: get-percent(4,12);
    }

    .push--5-12 {
      left: get-percent(5,12);
    }

    .push--6-12,
    .push--3-6,
    .push--2-4,
    .push--1-2 {
      left: get-percent(6,12);
    }

    .push--7-12 {
      left: get-percent(7,12);
    }

    .push--8-12,
    .push--4-6,
    .push--2-3 {
      left: get-percent(8,12);
    }

    .push--9-12,
    .push--3-4 {
      left: get-percent(9,12);
    }

    .push--10-12,
    .push--5-6 {
      left: get-percent(10,12);
    }

    .push--11-12 {
      left: get-percent(11,12);
    }

  }

  // tenth

  @if ($define_10_columns == true) {

    .push--1-10 {
      width: get-percent(1,10);
    }

    .push--2-10,
    .push--1-5 {
      width: get-percent(2,10);
    }

    .push--3-10 {
      width: get-percent(3,10);
    }

    .push--4-10, 
    .push--2-5 {
      width: get-percent(4,10);
    }

    .push--5-10 {
      width: get-percent(5,10);
    }

    .push--6-10,
    .push--3-5 {
      width: get-percent(6,10);
    }

    .push--7-10 {
      width: get-percent(7,10);
    }

    .push--8-10,
    .push--4-5 {
      width: get-percent(8,10);
    }

    .push--9-10 {
      width: get-percent(9,10);
    }

  }

  // golden ratio

  @if ($define_golden_columns == true) {

    // eights

    .push--3-8 {
      left: get-percent(3,8);
    }

    .push--5-8 {
      left: get-percent(5,8);
    }

    // elevenths

    .push--3-11 {
      left: get-percent(3,11);
    }

    .push--5-11 {
      left: get-percent(5,11);
    }

    .push--8-11 {
      left: get-percent(8,11);
    }

    // thirteenths

    .push--3-13 {
      left: get-percent(3,13);
    }

    .push--5-13 {
      left: get-percent(5,13);
    }

    .push--8-13 {
      left: get-percent(8,13);
    }

    .push--11-13 {
      left: get-percent(11,13);
    }

  }

}

@mixin push-sizes($size_class) {

  @if ($define_12_columns == true) {

    .push-#{$size_class}--1-12 {
      left: get-percent(1,12);
    }

    .push-#{$size_class}--2-12,
    .push-#{$size_class}--1-6 {
      left: get-percent(2,12);
    }

    .push-#{$size_class}--3-12,
    .push-#{$size_class}--1-4 {
      left: get-percent(3,12);
    }

    .push-#{$size_class}--4-12,
    .push-#{$size_class}--2-6,
    .push-#{$size_class}--1-3 {
      left: get-percent(4,12);
    }

    .push-#{$size_class}--5-12 {
      left: get-percent(5,12);
    }

    .push-#{$size_class}--6-12,
    .push-#{$size_class}--3-6,
    .push-#{$size_class}--2-4,
    .push-#{$size_class}--1-2 {
      left: get-percent(6,12);
    }

    .push-#{$size_class}--7-12 {
      left: get-percent(7,12);
    }

    .push-#{$size_class}--8-12,
    .push-#{$size_class}--4-6,
    .push-#{$size_class}--2-3 {
      left: get-percent(8,12);
    }

    .push-#{$size_class}--9-12,
    .push-#{$size_class}--3-4 {
      left: get-percent(9,12);
    }

    .push-#{$size_class}--10-12,
    .push-#{$size_class}--5-6 {
      left: get-percent(10,12);
    }

    .push-#{$size_class}--11-12 {
      left: get-percent(11,12);
    }

  }

  // tenth

  @if ($define_10_columns == true) {

    .push-#{$size_class}--1-10 {
      width: get-percent(1,10);
    }

    .push-#{$size_class}--2-10,
    .push-#{$size_class}--1-5 {
      width: get-percent(2,10);
    }

    .push-#{$size_class}--3-10 {
      width: get-percent(3,10);
    }

    .push-#{$size_class}--4-10, 
    .push-#{$size_class}--2-5 {
      width: get-percent(4,10);
    }

    .push-#{$size_class}--5-10 {
      width: get-percent(5,10);
    }

    .push-#{$size_class}--6-10,
    .push-#{$size_class}--3-5 {
      width: get-percent(6,10);
    }

    .push-#{$size_class}--7-10 {
      width: get-percent(7,10);
    }

    .push-#{$size_class}--8-10,
    .push-#{$size_class}--4-5 {
      width: get-percent(8,10);
    }

    .push-#{$size_class}--9-10 {
      width: get-percent(9,10);
    }

  }

  // golden ratio

  @if ($define_golden_columns == true) {

    // eights

    .push-#{$size_class}--3-8 {
      left: get-percent(3,8);
    }

    .push-#{$size_class}--5-8 {
      left: get-percent(5,8);
    }

    // elevenths

    .push-#{$size_class}--3-11 {
      left: get-percent(3,11);
    }

    .push-#{$size_class}--5-11 {
      left: get-percent(5,11);
    }

    .push-#{$size_class}--8-11 {
      left: get-percent(8,11);
    }

    // thirteenths

    .push-#{$size_class}--3-13 {
      left: get-percent(3,13);
    }

    .push-#{$size_class}--5-13 {
      left: get-percent(5,13);
    }

    .push-#{$size_class}--8-13 {
      left: get-percent(8,13);
    }

    .push-#{$size_class}--11-13 {
      left: get-percent(11,13);
    }

  }

}

@if ($expand_push == true and $define_sizes == true) {
  .no-opacity,
  .lte-ie-8 {
    @include push-sizes("large");
  }

  @media screen and ($mq_large_min) {
    @include push-sizes("large");
  }

  @media screen and ($mq_medium_max) and ($mq_medium_min) {
    @include push-sizes("medium");
  }

  @media screen and ($mq_nomensland_max) and ($mq_nomensland_min) {
    @include push-sizes("nml");
  }

  @media screen and ($mq_small_max) {
    @include push-sizes("small");
  }

  @if ($define_micro_size == true) {
    @media screen and ($mq_micro_max) {
      @include push-sizes("micro");
    }
  }
}

/*
########  ##     ## ##       ##       
##     ## ##     ## ##       ##       
##     ## ##     ## ##       ##       
########  ##     ## ##       ##       
##        ##     ## ##       ##       
##        ##     ## ##       ##       
##         #######  ######## ######## 
*/

@if ($define_pull == true) {

  @if ($define_12_columns == true) {

    .pull--1-12 {
      right: get-percent(1,12);
    }

    .pull--2-12,
    .pull--1-6 {
      right: get-percent(2,12);
    }

    .pull--3-12,
    .pull--1-4 {
      right: get-percent(3,12);
    }

    .pull--4-12,
    .pull--2-6,
    .pull--1-3 {
      right: get-percent(4,12);
    }

    .pull--5-12 {
      right: get-percent(5,12);
    }

    .pull--6-12,
    .pull--3-6,
    .pull--2-4,
    .pull--1-2 {
      right: get-percent(6,12);
    }

    .pull--7-12 {
      right: get-percent(7,12);
    }

    .pull--8-12,
    .pull--4-6,
    .pull--2-3 {
      right: get-percent(8,12);
    }

    .pull--9-12,
    .pull--3-4 {
      right: get-percent(9,12);
    }

    .pull--10-12,
    .pull--5-6 {
      right: get-percent(10,12);
    }

    .pull--11-12 {
      right: get-percent(11,12);
    }

  }

  // tenth

  @if ($define_10_columns == true) {

    .pull--1-10 {
      width: get-percent(1,10);
    }

    .pull--2-10,
    .pull--1-5 {
      width: get-percent(2,10);
    }

    .pull--3-10 {
      width: get-percent(3,10);
    }

    .pull--4-10, 
    .pull--2-5 {
      width: get-percent(4,10);
    }

    .pull--5-10 {
      width: get-percent(5,10);
    }

    .pull--6-10,
    .pull--3-5 {
      width: get-percent(6,10);
    }

    .pull--7-10 {
      width: get-percent(7,10);
    }

    .pull--8-10,
    .pull--4-5 {
      width: get-percent(8,10);
    }

    .pull--9-10 {
      width: get-percent(9,10);
    }

  }

  // golden ratio

  @if ($define_golden_columns == true) {

    // eights

    .pull--3-8 {
      right: get-percent(3,8);
    }

    .pull--5-8 {
      right: get-percent(5,8);
    }

    // elevenths

    .pull--3-11 {
      right: get-percent(3,11);
    }

    .pull--5-11 {
      right: get-percent(5,11);
    }

    .pull--8-11 {
      right: get-percent(8,11);
    }

    // thirteenths

    .pull--3-13 {
      right: get-percent(3,13);
    }

    .pull--5-13 {
      right: get-percent(5,13);
    }

    .pull--8-13 {
      right: get-percent(8,13);
    }

    .pull--11-13 {
      right: get-percent(11,13);
    }

  }

}



@mixin pull-sizes($size_class) {

  @if ($define_12_columns == true) {
  
    .pull-#{$size_class}--1-12 {
      right: get-percent(1,12);
    }

    .pull-#{$size_class}--2-12,
    .pull-#{$size_class}--1-6 {
      right: get-percent(2,12);
    }

    .pull-#{$size_class}--3-12,
    .pull-#{$size_class}--1-4 {
      right: get-percent(3,12);
    }

    .pull-#{$size_class}--4-12,
    .pull-#{$size_class}--2-6,
    .pull-#{$size_class}--1-3 {
      right: get-percent(4,12);
    }

    .pull-#{$size_class}--5-12 {
      right: get-percent(5,12);
    }

    .pull-#{$size_class}--6-12,
    .pull-#{$size_class}--3-6,
    .pull-#{$size_class}--2-4,
    .pull-#{$size_class}--1-2 {
      right: get-percent(6,12);
    }

    .pull-#{$size_class}--7-12 {
      right: get-percent(7,12);
    }

    .pull-#{$size_class}--8-12,
    .pull-#{$size_class}--4-6,
    .pull-#{$size_class}--2-3 {
      right: get-percent(8,12);
    }

    .pull-#{$size_class}--9-12,
    .pull-#{$size_class}--3-4 {
      right: get-percent(9,12);
    }

    .pull-#{$size_class}--10-12,
    .pull-#{$size_class}--5-6 {
      right: get-percent(10,12);
    }

    .pull-#{$size_class}--11-12 {
      right: get-percent(11,12);
    }

  }

  // tenth

  @if ($define_10_columns == true) {

    .pull-#{$size_class}--1-10 {
      width: get-percent(1,10);
    }

    .pull-#{$size_class}--2-10,
    .pull-#{$size_class}--1-5 {
      width: get-percent(2,10);
    }

    .pull-#{$size_class}--3-10 {
      width: get-percent(3,10);
    }

    .pull-#{$size_class}--4-10, 
    .pull-#{$size_class}--2-5 {
      width: get-percent(4,10);
    }

    .pull-#{$size_class}--5-10 {
      width: get-percent(5,10);
    }

    .pull-#{$size_class}--6-10,
    .pull-#{$size_class}--3-5 {
      width: get-percent(6,10);
    }

    .pull-#{$size_class}--7-10 {
      width: get-percent(7,10);
    }

    .pull-#{$size_class}--8-10,
    .pull-#{$size_class}--4-5 {
      width: get-percent(8,10);
    }

    .pull-#{$size_class}--9-10 {
      width: get-percent(9,10);
    }

  }

  // golden ratio

  @if ($define_golden_columns == true) {

    // eights

    .pull-#{$size_class}--3-8 {
      right: get-percent(3,8);
    }

    .pull-#{$size_class}--5-8 {
      right: get-percent(5,8);
    }

    // elevenths

    .pull-#{$size_class}--3-11 {
      right: get-percent(3,11);
    }

    .pull-#{$size_class}--5-11 {
      right: get-percent(5,11);
    }

    .pull-#{$size_class}--8-11 {
      right: get-percent(8,11);
    }

    // thirteenths

    .pull-#{$size_class}--3-13 {
      right: get-percent(3,13);
    }

    .pull-#{$size_class}--5-13 {
      right: get-percent(5,13);
    }

    .pull-#{$size_class}--8-13 {
      right: get-percent(8,13);
    }

    .pull-#{$size_class}--11-13 {
      right: get-percent(11,13);
    }

  }

}

@if ($expand_pull == true and $define_sizes == true) {
  .no-opacity,
  .lte-ie-8 {
    @include pull-sizes("large");
  }

  @media screen and ($mq_large_min) {
    @include pull-sizes("large");
  }

  @media screen and ($mq_medium_max) and ($mq_medium_min) {
    @include pull-sizes("medium");
  }

  @media screen and ($mq_nomensland_max) and ($mq_nomensland_min) {
    @include pull-sizes("nml");
  }

  @media screen and ($mq_small_max) {
    @include pull-sizes("small");
  }

  @if ($define_micro_size == true)Â {
    @media screen and ($mq_micro_max) {
      @include pull-sizes("micro");
    }
  }
}

// flexbox only

.set-of-11  > .grid__item:nth-child(1n+12),
.set-of-10  > .grid__item:nth-child(1n+11),
.set-of-9   > .grid__item:nth-child(1n+10),
.set-of-8   > .grid__item:nth-child(1n+9),
.set-of-7   > .grid__item:nth-child(1n+8),
.set-of-6   > .grid__item:nth-child(1n+7),
.set-of-5   > .grid__item:nth-child(1n+6),
.set-of-4   > .grid__item:nth-child(1n+5),
.set-of-3   > .grid__item:nth-child(1n+4),
.set-of-2   > .grid__item:nth-child(1n+3) {
  flex-grow: 0;
}